# This is a basic workflow to help you get started with Actions

name: Notification Channel

# Controls when the workflow will run
on:
  workflow_dispatch:
     inputs:
      message:
        description: 'Select the Terraform Action'
      tf-apply:
        type: boolean
        description: 'Apply the Alerts'
        required: false
        default: false
      tf-destroy:
        type: boolean
        description: 'Destroy the Alerts'
        required: false
        default: false

env:
  TERRAFORM_VERSION: 1.5.5
  WORKING_DIR: notification-setup

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "Terraform Apply"
  Terraform-Apply:
    if: success() && github.event.inputs.tf-apply == 'true'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
          run:
            working-directory: ${{ env.WORKING_DIR }}
    
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3

    - name: Unset Impersonation
      run: |
        gcloud config unset auth/impersonate_service_account
    
    #- id: 'auth'
    #  uses: 'google-github-actions/auth@v1'
    #  with: 
    #    credentials_json: ${{ secrets.SVC_TF_GHA_KEY }}
    #    service_account: test-gha-pipeline-tf@test-project-dec19.iam.gserviceaccount.com
        
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        version: '>= 363.0.0'
        project_id: test-project-dec19
        service_account_key: ${{ secrets.SVC_TF_GHA_KEY }}
        export_default_credentials: true

    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    - name: terraform version
      run: terraform version
    
    - name: terraform Init
      run: terraform init -input=false

    - name: terraform execution
      run: terraform plan

    - name: terraform Apply
      run: terraform apply -auto-approve -input=false

  Terraform-destroy:
      if: success() && github.event.inputs.tf-destroy == 'true'
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      defaults:
            run:
              working-directory: ${{ env.WORKING_DIR }}
      
      # Add "id-token" with the intended permissions.
      permissions:
        contents: 'read'
        id-token: 'write'
  
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/test-project-dec19/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          service_account: 'test-gha-pipeline-tf@test-project-dec19.iam.gserviceaccount.com'
  
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 363.0.0'
  
      - name: 'Use gcloud CLI'
        run: 'gcloud info'
  
      - name: terraform destroy
        run: terraform destroy -auto-approve -input=false
